{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}-deployment-template",
    "annotations": {
      "description": "Deployment template for a django server connected to a PostGreSQL database.",
      "tags": "django",
      "iconClass": "icon-python"
    }
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${APP_GROUP}",
          "name": "${NAME}"
        }
      },
      "data": {
        "admin-user": "${DJANGO_ADMIN_USER}",
        "admin-password": "${DJANGO_ADMIN_PASSWORD}"
      },
      "type": "Opaque"
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        },
        "labels": {
          "app": "${APP_GROUP}",
          "name": "${NAME}"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${APP_GROUP}",
          "name": "${NAME}"
        }
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "port": {
          "targetPort": "8080-tcp"
        },
        "tls": {
          "insecureEdgeTerminationPolicy": "Redirect",
          "termination": "edge"
        },
        "to": {
          "kind": "Service",
          "name": "${NAME}",
          "weight": 100
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server"
        },
        "labels": {
          "app": "${APP_GROUP}",
          "name": "${NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": ["${NAME}"],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${NAME}:${TAG_NAME}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "readinessProbe": {
                  "failureThreshold": 5,
                  "periodSeconds": 30,
                  "initialDelaySeconds": 3,
                  "timeoutSeconds": 20,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "failureThreshold": 5,
                  "periodSeconds": 60,
                  "initialDelaySeconds": 30,
                  "timeoutSeconds": 20,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "env": [
                  {
                    "name": "DATABASE_SERVICE_HOST",
                    "value": "${DATABASE_SERVICE_HOST}"
                  },
                  {
                    "name": "DATABASE_SERVICE_PORT",
                    "value": "${DATABASE_SERVICE_PORT}"
                  },
                  {
                    "name": "DATABASE_NAME",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "DATABASE_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DATABASE_SERVICE_HOST}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "DATABASE_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DATABASE_SERVICE_HOST}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "DJANGO_SECRET_KEY",
                    "value": "${DJANGO_SECRET_KEY}"
                  },
                  {
                    "name": "DJANGO_DEBUG",
                    "value": "${DJANGO_DEBUG}"
                  },
                  {
                    "name": "DJANGO_ADMIN_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}",
                        "key": "admin-user"
                      }
                    }
                  },
                  {
                    "name": "DJANGO_ADMIN_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}",
                        "key": "admin-password"
                      }
                    }
                  },
                  {
                    "name": "APP_SCRIPT",
                    "value": "${APP_SCRIPT}"
                  },
                  {
                    "name": "EMAIL_HOST",
                    "value": "${EMAIL_HOST}"
                  },
                  {
                    "name": "EMAIL_PORT",
                    "value": "${EMAIL_PORT}"
                  },
                  {
                    "name": "EMAIL_BACKEND",
                    "value": "${EMAIL_BACKEND}"
                  },
                  {
                    "name": "EMAIL_USE_TLS",
                    "value": "${EMAIL_USE_TLS}"
                  },
                  {
                    "name": "REMINDER_EMAIL_NOTICE_MONTHS",
                    "value": "${REMINDER_EMAIL_NOTICE_MONTHS}"
                  },
                  {
                    "name": "AGRI_EMAIL",
                    "value": "${AGRI_EMAIL}"
                  },
                  {
                    "name": "WEASYPRINT_HOST",
                    "value": "${WEASYPRINT_HOST}"
                  },
                  {
                    "name": "WEASYPRINT_PORT",
                    "value": "${WEASYPRINT_HOST}"
                  },
                  {
                    "name": "OIDC_RP_CLIENT_ID",
                    "value": "${OIDC_RP_CLIENT_ID}"
                  },
                  {
                    "name": "OIDC_RP_CLIENT_SECRET",
                    "value": "${OIDC_RP_CLIENT_SECRET}"
                  },
                  {
                    "name": "OIDC_RP_SIGN_ALGO",
                    "value": "${OIDC_RP_SIGN_ALGO}"
                  },
                  {
                    "name": "OIDC_OP_AUTHORIZATION_ENDPOINT",
                    "value": "${OIDC_OP_AUTHORIZATION_ENDPOINT}"
                  },
                  {
                    "name": "OIDC_OP_TOKEN_ENDPOINT",
                    "value": "${OIDC_OP_TOKEN_ENDPOINT}"
                  },
                  {
                    "name": "OIDC_OP_USER_ENDPOINT",
                    "value": "${OIDC_OP_USER_ENDPOINT}"
                  },
                  {
                    "name": "OIDC_OP_JWKS_ENDPOINT",
                    "value": "${OIDC_OP_JWKS_ENDPOINT}"
                  },
                  {
                    "name": "OIDC_LOGOUT_REDIRECT_URL",
                    "value": "${OIDC_LOGOUT_REDIRECT_URL}"
                  },
                  {
                    "name": "DCBR_LOG_LEVEL",
                    "value": "${DCBR_LOG_LEVEL}"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "HorizontalPodAutoscaler",
      "apiVersion": "autoscaling/v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "app": "${APP_GROUP}",
          "name": "${NAME}"
        }
      },
      "spec": {
        "scaleTargetRef": {
          "kind": "DeploymentConfig",
          "name": "${NAME}"
        },
        "minReplicas": 1,
        "maxReplicas": 3
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the OpenShift resources associated to the server instance.",
      "required": true,
      "value": "dcbr-api"
    },
    {
      "name": "APP_GROUP",
      "displayName": "App Group",
      "description": "The name assigned to all of the deployments in this project.",
      "required": true,
      "value": "dcbr"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "nbup6o-tools"
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Django service, if left blank a value will be defaulted.",
      "value": "dcbr.pathfinder.gov.bc.ca"
    },
    {
      "name": "DATABASE_SERVICE_HOST",
      "displayName": "Database Service Host Name",
      "description": "The name of the database server/service.",
      "required": true,
      "value": "dcbr-db"
    },
    {
      "name": "DATABASE_SERVICE_PORT",
      "displayName": "Database Service Port Number",
      "description": "The port number of the database server/service.",
      "required": true,
      "value": "5432"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "description": "Name of the deployed database (see environment variables in deployed database).",
      "value": "DCBR"
    },
    {
      "name": "DJANGO_SECRET_KEY",
      "displayName": "Django Secret Key",
      "description": "Set this to a long random string.",
      "generate": "expression",
      "from": "[\\w]{50}"
    },
    {
      "name": "DJANGO_DEBUG",
      "displayName": "Django Debug",
      "description": "If Django is in debug mode",
      "required": true,
      "value": "False"
    },
    {
      "name": "DJANGO_ADMIN_USER",
      "displayName": "API Admin Username",
      "description": "Username for the Django superuser account.  Needs to be base64 encoded.",
      "required": true,
      "generate": "expression",
      "from": "[a-zA-Z_][a-zA-Z0-9_]{10}"
    },
    {
      "name": "DJANGO_ADMIN_PASSWORD",
      "displayName": "API Admin Password",
      "description": "Password for the Django superuser account.  Needs to be base64 encoded.",
      "required": true,
      "generate": "expression",
      "from": "[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]{16}"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "value": "dev",
      "required": true
    },
    {
      "name": "APP_SCRIPT",
      "displayName": "Application Startup Script",
      "description": "Used to run the application from a Bash script. This should be a path to a Bash script (defaults to app.sh unless set to null) that will be used to start the application (optional).",
      "value": "app-dcbr.sh"
    },
    {
      "name": "EMAIL_HOST",
      "displayName": "The email server",
      "description": "The host for the SMTP server.",
      "required": true,
      "value": ""
    },
    {
      "name": "EMAIL_PORT",
      "displayName": "The email server port",
      "description": "The port used by the SMTP server.",
      "required": true,
      "value": "25"
    },
    {
      "name": "EMAIL_BACKEND",
      "displayName": "The email backend",
      "description": "The Django email backend used to process email messages.",
      "required": true,
      "value": "post_office.EmailBackend"
    },
    {
      "name": "EMAIL_USE_TLS",
      "displayName": "Email use TLS",
      "description": "Wether to use TLS or not to authenticate to the email server.",
      "required": true,
      "value": "True"
    },
    {
      "name": "REMINDER_EMAIL_NOTICE_MONTHS",
      "displayName": "Registration Validity",
      "description": "The number of months after which an operator registration is meant to expire.",
      "required": true,
      "value": "1"
    },
    {
      "name": "WEASYPRINT_HOST",
      "displayName": "Weasyprint Host",
      "description": "The host name for the Weasyprint service.",
      "required": true,
      "value": "weasyprint"
    },
    {
      "name": "WEASYPRINT_PORT",
      "displayName": "Weasyprint Port",
      "description": "The port to be used for the weasyprint service.",
      "required": true,
      "value": "5001"
    },
    {
      "name": "AGRI_EMAIL",
      "displayName": "AGRI recipient Email",
      "description": "The AGRI email address to be used as recipient (from) in outbound messages.",
      "required": true,
      "value": "AgriServiceBC@gov.bc.ca"
    },
    {
      "name": "OIDC_RP_CLIENT_ID",
      "displayName": "OIDC Client Id",
      "description": "The client id to be used for authentication with the OIDC provider.",
      "required": true,
      "value": "dcbr-admin"
    },
    {
      "name": "OIDC_RP_CLIENT_SECRET",
      "displayName": "OIDC Client Secret",
      "description": "The secret for the OIDC provider client.",
      "required": true,
      "value": ""
    },
    {
      "name": "OIDC_RP_SIGN_ALGO",
      "displayName": "OIDC Signing Algorithm",
      "description": "The algorithm used by the OIDC provider to sign tokens.",
      "required": true,
      "value": "RS256"
    },
    {
      "name": "OIDC_OP_AUTHORIZATION_ENDPOINT",
      "displayName": "OIDC Provider Authorization Endpoint",
      "description": "The OIDC provider endpoint for authorization requests.",
      "required": true,
      "value": "https://sso-dev.pathfinder.gov.bc.ca/auth/realms/uicn0kkh/protocol/openid-connect/auth"
    },
    {
      "name": "OIDC_OP_TOKEN_ENDPOINT",
      "displayName": "OIDC Provider Token Endpoint",
      "description": "The OIDC provider endpoint for token requests.",
      "required": true,
      "value": "https://sso-dev.pathfinder.gov.bc.ca/auth/realms/uicn0kkh/protocol/openid-connect/token"
    },
    {
      "name": "OIDC_OP_USER_ENDPOINT",
      "displayName": "OIDC Provider User Endpoint",
      "description": "The OIDC provider endpoint for user requests.",
      "required": true,
      "value": "https://sso-dev.pathfinder.gov.bc.ca/auth/realms/uicn0kkh/protocol/openid-connect/userinfo"
    },
    {
      "name": "OIDC_OP_JWKS_ENDPOINT",
      "displayName": "OIDC Provider JWKS Endpoint",
      "description": "The OIDC provider endpoint for requesting JWKS key.",
      "required": true,
      "value": "https://sso-dev.pathfinder.gov.bc.ca/auth/realms/uicn0kkh/protocol/openid-connect/certs"
    },
    {
      "name": "OIDC_LOGOUT_REDIRECT_URL",
      "displayName": "OIDC Logout Redirect URL",
      "description": "The URL used by the OIDC provider to redirect the request after logout.",
      "required": true,
      "value": "https://www2.gov.bc.ca/gov/content/governments/organizational-structure/ministries-organizations/ministries/agriculture"
    },
    {
      "name": "DCBR_LOG_LEVEL",
      "displayName": "Log Level",
      "description": "The log level for the component.",
      "required": true,
      "value": "WARNING"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "Resources CPU Request",
      "description": "The resources CPU request (in cores) for this build.",
      "required": true,
      "value": "100m"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "Resources CPU Limit",
      "description": "The resources CPU limit (in cores) for this build.",
      "required": true,
      "value": "750m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Resources Memory Request",
      "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "100Mi"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Resources Memory Limit",
      "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "512Mi"
    }
  ]
}
